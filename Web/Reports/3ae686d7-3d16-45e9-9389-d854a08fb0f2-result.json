{"name": "test_signup_with_not_existing_user_data", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Web.Tests.test_signup.Test_SignUp object at 0x000002E90421BE80>\n\n>   ???\n\nC:\\Users\\user\\PycharmProjects\\Final Project\\Web\\Tests\\test_signup.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nBasePage\\basepage.py:37: in _click\n    self._wait_until_element_is_visible(locate)\nBasePage\\basepage.py:27: in _wait_until_element_is_visible\n    wait.until(ec.visibility_of_element_located(locate))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4097a5d0a161c8cad4ec83a08b65645a\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002E904BB3490>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\pselenium-venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "steps": [{"name": "Opening the website", "status": "passed", "start": 1675538188906, "stop": 1675538189193}, {"name": "Clicking the element", "status": "passed", "parameters": [{"name": "locate", "value": "('xpath', \"//a[@id='signin2']\")"}], "start": 1675538189194, "stop": 1675538189280}, {"name": "Clicking the element", "status": "passed", "parameters": [{"name": "locate", "value": "('xpath', \"//button[contains(text(),'Sign up')]\")"}], "start": 1675538190044, "stop": 1675538190136}, {"name": "Accepting alert", "status": "passed", "parameters": [{"name": "time", "value": "10"}], "start": 1675538190136, "stop": 1675538190664}, {"name": "Clicking the element", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\user\\pselenium-venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\user\\PycharmProjects\\FinalProject\\Web\\BasePage\\basepage.py\", line 37, in _click\n    self._wait_until_element_is_visible(locate)\n  File \"C:\\Users\\user\\PycharmProjects\\FinalProject\\Web\\BasePage\\basepage.py\", line 27, in _wait_until_element_is_visible\n    wait.until(ec.visibility_of_element_located(locate))\n  File \"C:\\Users\\user\\pselenium-venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "locate", "value": "('xpath', \"//a[@id='login2']\")"}], "start": 1675538190664, "stop": 1675538200906}], "start": 1675538188906, "stop": 1675538200907, "uuid": "fd4b2d74-f498-41ab-a531-9f5fc18c50bb", "historyId": "5bb011fba22843dda7062d566a0665fe", "testCaseId": "cfa9fe5e698c0f3516abcd864d0ac8d5", "fullName": "Tests.test_signup.Test_SignUp#test_signup_with_not_existing_user_data", "labels": [{"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_signup"}, {"name": "subSuite", "value": "Test_SignUp"}, {"name": "host", "value": "mike"}, {"name": "thread", "value": "7176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_signup"}]}